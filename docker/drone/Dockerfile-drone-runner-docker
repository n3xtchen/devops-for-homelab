FROM alpine:3 as alpine
RUN apk add -U --no-cache ca-certificates

RUN wget https://github.com/tmate-io/tmate/releases/download/2.4.0/tmate-2.4.0-static-linux-arm32v7.tar.xz
RUN tar -xf tmate-2.4.0-static-linux-arm32v7.tar.xz
RUN mv tmate-2.4.0-static-linux-arm32v7/tmate /bin/
RUN chmod +x /bin/tmate

FROM golang:1-alpine3.17 as golang
RUN apk add -U --no-cache ca-certificates

RUN https://github.com/drone-runners/drone-runner-docker/archive/refs/tags/v1.8.3.tar.gz
RUN tar -x v1.8.3.tar.gz
RUN cd v1.8.3
RUN go env -w GO111MODULE=on
RUN go env -w  GOPROXY=https://goproxy.cn,direct
RUN go build

FROM scratch
EXPOSE 3000

ENV GODEBUG netdns=go
ENV DRONE_PLATFORM_OS linux
ENV DRONE_PLATFORM_ARCH arm

COPY --from=alpine /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=alpine /bin/tmate /bin/
COPY --from=golang /go/v1.8.3/drone-runner-docker /bin

LABEL com.centurylinklabs.watchtower.stop-signal="SIGINT"

ADD drone-runner-docker /bin/
ENTRYPOINT ["/bin/drone-runner-docker"]
